[INCLUDE=presentation]
Title         : Voil√†
Sub Title     : Improved Navigation for Streaming Video Content
Author        : Anirudh Ramanathan
Author        : Ankur Prasad
Author        : Arun Krishnakumar
Author        : Sai Sujith Reddy
Author        : Siddhartha Karthik Copesetty
Reveal Theme  : moon
Beamer Theme  : singapore

[TITLE]

# Introduction
## Problem Statement

* {.fragment} Longer video content, shorter attention spans.
* {.fragment} Navigation through streaming videos by scrubbing is slow.
* {.fragment} Example: Video lectures, seminars and technical presentation videos.
* {.fragment} Can we do better?


## Our Solution

* {.fragment} Use viewership patterns to find and visually represent interesting sections of video in a heat-map.
<!-- image here -->
* {.fragment} Challenge: What if there isn't sufficient data to generate a heat-map?
  * {.fragment} Generate meaningful navigation points for initial viewers of a particular video.
  * {.fragment} Must not skew results of early users.
* {.fragment} Use video analysis to find segment boundaries within videos.
* {.fragment} Use these techniques to generate summaries of streaming video.

# Implementation

## Goals

* {.fragment} Make technique available to a large class of streaming video.
* {.fragment} Allow user constraints on video analysis such as bandwidth and pre-processing time.

## Client-side processing

* {.fragment} Google Chrome Extension.
~~ Figure { #fig-p0 .fragment; float: right; margin-left: 1em; margin-top: -1.5em}
![extension]
~~

* {.fragment} Fetches segment boundaries and heat-map from the backend.
* {.fragment} Visually presents the relative popularity of various segments of streaming video when available.
* {.fragment} Performs video analysis on the client using JavaScript.

## Video Analysis

* {.fragment} Perform sampling of video frames for analysis in pre-processing step.
* {.fragment} resemble.js used to compute grayscale 'diff' between successive video frames.
* {.fragment} Adaptively change sampling frequency (delta) based on previous 'diff', bandwidth and time constraints.
~~ Figure { #fig-p1 .fragment;}
![scoring]
~~

## Server-side processing

* {.fragment} RESTful API.
  * {.fragment} Node.js/Express backend. 
  * {.fragment} SQLite3 as test DB.
* {.fragment} Histogram-based computation to determine relative popularity of different video segments.

## Demo: video processing

<video data-autoplay src="res/basic_gen.webm" height="100%" width="100%" controls loop></video>
  
## Demo: Navigation

<video data-autoplay src="res/basic_navigation.webm" height="100%" width="100%" controls loop></video>

## Demo: Heat-map

<video data-autoplay src="res/heatmap.webm" height="100%" width="100%" controls loop></video>

# Scheduled work

* {.fragment} Increasing robustness of video analysis and testing across wide varieties of video types.
* {.fragment} Implementing auto-summarization based on displayed heatmap.
* {.fragment} Evaluating the effectiveness of generated summary.

# Future Work

* {.fragment} Incorporate various demographic characteristics in viewership pattern:
  * Age
  * Gender
  * Geographical Location
  * Time
  * General Interests (such as: political leanings, hobbies, profession etc).
* {.fragment} Implement clustering techniques to identify scenes and similar segments of videos.


# Thanks!

[scoring]: res/scoring.png "Scoring" { height: 300px }
[yt]: res/yt.png "Youtube" { height: 90% }
[extension]: res/extension.jpg "Voila" { height: 90% }